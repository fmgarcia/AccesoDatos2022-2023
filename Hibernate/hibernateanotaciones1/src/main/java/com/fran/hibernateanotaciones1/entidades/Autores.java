package com.fran.hibernateanotaciones1.entidades;

// Generated 13 dic 2022 17:58:44 by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;



import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;


/**
 * Autores generated by hbm2java
 */
@Entity
@Table(name = "autores")
public class Autores implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	@Id
	@Column(name = "cod", unique = true, nullable = false, length = 5)
	private String cod;
	@Column(name = "nombre", length = 60)
	private String nombre;
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "autores")
	private Set<Libros> libroses = new HashSet<Libros>(0);

	public Autores() {
	}
	
	public Autores(String cod, String nombre) {
		this.cod = cod;
		this.nombre = nombre;
	}

	public Autores(String cod) {
		this.cod = cod;
	}

	public Autores(String cod, String nombre, Set<Libros> libroses) {
		this.cod = cod;
		this.nombre = nombre;
		this.libroses = libroses;
	}

	public String getCod() {
		return this.cod;
	}

	public void setCod(String cod) {
		this.cod = cod;
	}

	
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	
	public Set<Libros> getLibroses() {
		return this.libroses;
	}

	public void setLibroses(Set<Libros> libroses) {
		this.libroses = libroses;
	}

	@Override
	public String toString() {
		String resultado = "";
		resultado = "CÃ³digo: " + cod +
				"\nNombre: " + nombre + "\n";
		for(Libros libro : libroses) {
			resultado += libro.getTitulo() + "\n";
		}		
		return resultado;
	}

	@Override
	public int hashCode() {
		return Objects.hash(cod);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Autores other = (Autores) obj;
		return Objects.equals(cod, other.cod);
	}
	
	
	

}
