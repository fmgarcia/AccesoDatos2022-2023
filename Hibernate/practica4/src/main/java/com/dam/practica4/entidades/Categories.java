package com.dam.practica4.entidades;

// default package
// Generated 20 dic 2022 19:49:13 by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;

/**
 * Categories generated by hbm2java
 */
@Entity
@Table(name = "categories")
public class Categories implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private int id;
	private String category;
	private Set<Jokes> jokeses = new HashSet<Jokes>(0);

	public Categories() {
	}
	
	public Categories(int id) {
		this.id = id;
	}

	public Categories(int id, String category) {
		this.id = id;
		this.category = category;
	}

	public Categories(int id, String category, Set<Jokes> jokeses) {
		this.id = id;
		this.category = category;
		this.jokeses = jokeses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "category", nullable = false)
	public String getCategory() {
		return this.category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "categories")
	public Set<Jokes> getJokeses() {
		return this.jokeses;
	}

	public void setJokeses(Set<Jokes> jokeses) {
		this.jokeses = jokeses;
	}

	@Override
	public String toString() {
		String resultado = "";
		resultado += "Id: "  + id  + "\n";
		resultado += "Categoría: "  + category  + "\n";
		if (jokeses.size()>0) {
			resultado += "Listado de Id's:\n";
			for (Jokes joke : jokeses) {
				resultado += joke.getId() + "\n";
			} 
		} else {
			resultado += "Esta categoría no tiene ningún joke";
		}
		return resultado;
	}

	@Override
	public int hashCode() {
		return Objects.hash(id);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Categories other = (Categories) obj;
		return id == other.id;
	}
	
	

}
